<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.personal_blog.dao.IArticleDao">
    <!--resultMap里的id写返回结果集，以键值对得方式返回，type里写model得别名，映射类  -->
    <resultMap id="ArticleResultMap" type="Article">
        <!-- 这里得id为主键 ,result为返回结果，property为model对应得字段别名，column表里得字段名 -->
        <id property="id" column="ID"/>
        <result property="title" column="TITLE"/>
        <result property="time" column="TIME"/>
        <result property="visit" column="VISIT"/>
        <result property="content" column="CONTENT"/>
    </resultMap>



    <!--parameterType：设置别名 useGeneratedKeys="true" keyProperty="no"表里自增 ，这里得设置方法-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into article (TITLE, TIME, VISIT, CONTENT)
        values (#{title},#{time},#{visit},#{content});
    </insert>

    <update id="update">
        update article
        set
        TITLE = #{title},
        TIME = #{time},
        VISIT = #{visit},
        CONTENT = #{content}
        where ID = #{id};
    </update>

    <delete id="delete">
        delete from article
        where ID = #{id}
    </delete>

    <select id="selectListByPage" resultMap="ArticleResultMap">
        select * from article
        <where>
            <if test="searchText != null">
                and title regexp #{searchText}
            </if>
        </where>
        order by TIME DESC
        limit ${(pageNo-1)*pageSize},${pageSize};
    </select>

    <select id="selectArticleById" resultMap="ArticleResultMap">
        select * from article
        where ID = #{id};
    </select>

    <select id="selectListByTagAndPage" resultMap="ArticleResultMap">
        select article.* from article inner join article_tag on article.ID = article_tag.AID
        where TID = #{tid}
        order by TIME DESC
        limit ${(pageNo-1)*pageSize},${pageSize};
    </select>

    <select id="selectYearByTime" resultType="String">
        select distinct year(TIME) year from article where TIME is not null;
    </select>

    <select id="selectListByTimeAndPage" resultMap="ArticleResultMap">
        select * from article
        where year(TIME) = #{year}
        limit ${(pageNo-1)*pageSize},${pageSize};
    </select>

    <select id="selectPageNumber" resultType="int">
        select ceil(count(ID)/#{pageSize})
        from article

    </select>
</mapper>

